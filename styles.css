/*!
 * Fathead UI Design Kit
 * Minimalist Futuristic – Golden Ratio, Glassmorphism, Microfeedbacks, Compliant with W3C, EU Accessibility Act 2025 & WCAG 2.1.
 * https://github.com/daveymason/fathead-ui
 */
 
/* =========================
   1. Root Variables
   ========================= */
:root {
    /* Scientific color palette - with RGB values for transparency */
    --color-red-pill: #D32F2F;       /* Material Design Red 700 */
    --color-red-pill-rgb: 211, 47, 47;
    --color-blue-pill: #1976D2;      /* Material Design Blue 700 */
    --color-blue-pill-rgb: 25, 118, 210; /* RGB values for the same blue */
    
    /* Neutral tones for academic visual hierarchy */
    --neutral-900: #212529;
    --neutral-900-rgb: 33, 37, 41;
    --neutral-800: #343a40;
    --neutral-700: #495057;
    --neutral-600: #6c757d;
    --neutral-500: #adb5bd;
    --neutral-400: #ced4da;
    --neutral-300: #dee2e6;
    --neutral-200: #e9ecef;
    --neutral-200-rgb: 233, 236, 239;
    --neutral-100: #f8f9fa;
    
    /* Data visualization color scale - for bias spectrum */
    --data-left: var(--color-blue-pill);
    --data-right: var(--color-red-pill);
    --data-center: #82c91e; /* Greenish */
    
    /* For content.css consistency */
    --color-left: var(--color-blue-pill);
    --color-lean-left: #78D1FF;
    --color-center: var(--data-center);
    --color-lean-right: #C76363;
    --color-right: var(--color-red-pill);
    --color-text-light: white; /* For dark backgrounds if any */
    --color-text-dark: var(--neutral-900);
    
    /* Reliability colors - based on scientific precision */
    --reliability-high: #40c057;
    --reliability-medium: #fab005;
    --reliability-low: #fa5252;

    /* Main Theme Variables (Academic Light Style) */
    --fh-primary: var(--color-blue-pill);
    --fh-secondary: var(--neutral-700); 
    --fh-accent: var(--data-center);    
    --fh-background: var(--neutral-100); 
    --fh-text: var(--color-text-dark);    
    --fh-text-secondary: var(--neutral-700);
    --fh-text-tertiary: var(--neutral-600);
    
    --fh-glow: rgba(var(--color-blue-pill-rgb), 0.3); 
    --fh-shadow: rgba(var(--neutral-900-rgb), 0.1); 
    
    --fh-golden: 1.618;
    --fh-radius: 8px; 
    --fh-transition: all 0.25s cubic-bezier(0.23,1,0.32,1);

    /* Golden ratio sizing */
    --fh-base: 1rem;
    --fh-xs: calc(var(--fh-base) / var(--fh-golden));
    --fh-sm: calc(var(--fh-xs) * var(--fh-golden));
    --fh-md: var(--fh-base);
    --fh-lg: calc(var(--fh-base) * var(--fh-golden));
    --fh-xl: calc(var(--fh-lg) * var(--fh-golden));
    --fh-xxl: calc(var(--fh-xl) * var(--fh-golden));

    /* Glassmorphism (adapted for light theme) */
    --fh-glass-bg: rgba(var(--neutral-200-rgb), 0.75); 
    --fh-glass-border: rgba(var(--neutral-900-rgb), 0.1);
    --fh-glass-highlight: rgba(255, 255, 255, 0.5); 
    --fh-glass-shadow: rgba(var(--neutral-900-rgb), 0.05);
    --fh-glass-blur: 15px;    
    --fh-bg-blur: 8px;        

    /* Fonts */
    --fh-font-body: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', sans-serif;
    --fh-font-headings: var(--fh-font-body);
}

/* =========================
   2. Reset & Base
   ========================= */
/* replace wrapper-scoped rules with global reset */
* , *::before , *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    transition: var(--fh-transition);
}

/* now apply core root styles directly to body */
body {
    font-family: var(--fh-font-body);
    color: var(--fh-text);
    background: var(--fh-background);
    min-height: 100vh;
    width: 100%;
    position: relative;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Changed from auto to hidden to ensure snap-container controls scroll */
}

/* =========================
   3. Layout & Containers
   ========================= */
container {
    background: var(--fh-glass-bg);
    backdrop-filter: blur(var(--fh-bg-blur));
    border-radius: var(--fh-radius);
    box-shadow: 0 4px 20px var(--fh-shadow);
    padding: var(--fh-xl); /* Increased padding for more breathing room */
    width: 90%; /* Make container responsive, up to max-width */
    max-width: 1200px; /* Retain max-width for very large screens */
    position: relative;
    overflow: hidden; /* Keep this to ensure rounded corners clip content */
    display: flex; /* Allow flex properties for content alignment */
    flex-direction: column; /* Stack content vertically */
    justify-content: center; /* Center content vertically within the container */
    align-items: center;   /* Horizontal centering of content if it's not full width */
    min-height: 70vh; /* MODIFIED: Make the container itself take up a significant portion of the viewport height */
    /* This ensures the "box" isn't too small, especially in sections with less content. */
    /* Content within this 70vh+ container will be centered by justify-content and align-items. */
}
container::before {
    content: '';
    position: absolute;
    top: var(--mouse-y, 50%);
    left: var(--mouse-x, 50%);
    width: 300%;
    height: 300%;
    transform: translate(-50%, -50%);
    background: radial-gradient(circle at center, rgba(255,255,255,0.05), transparent 60%);
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.5s;
}
container:hover::before {
    opacity: 1;
}

header {
    text-align: center;
    padding: var(--fh-xl) 0 var(--fh-lg);
    margin-bottom: var(--fh-xl);
    position: relative;
}

header h1 {
    font-family: var(--fh-font-headings);
    font-size: 3.5rem; /* Even larger hero title */
    font-weight: 300;
    letter-spacing: 1px;
    background: linear-gradient(90deg, var(--fh-primary), var(--fh-secondary), var(--fh-accent));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 0 15px var(--fh-glow);
    display: inline-block;
    animation: fh-fade-in 0.8s ease-out;
}

header p {
    font-size: var(--fh-md);
    font-weight: 300;
    max-width: 800px; /* Increased max-width for better flow */
    margin: 0 auto;
    opacity: 0.8;
    animation: fh-fade-in 1s ease-out 0.2s both;
    text-align: center; /* Ensure paragraph text is centered */
    line-height: 1.7; /* Improved readability */
}

/* =========================
   4. Cards & Glassmorphism
   ========================= */
card {
    background: linear-gradient(120deg, var(--fh-glass-bg) 80%, rgba(45,192,255,0.05) 100%);
    border: 1px solid var(--fh-glass-border);
    border-left: 4px solid var(--fh-primary);
    border-radius: var(--fh-radius);
    box-shadow: 0 8px 32px rgba(0,0,0,0.5), 0 0 15px var(--fh-glow);
    padding: var(--fh-lg);
    margin-bottom: var(--fh-lg);
    position: relative;
    overflow: hidden;
    animation: fh-slide-up 0.5s cubic-bezier(0.23,1,0.32,1) both;
    transition: transform 0.3s, box-shadow 0.3s;
    backdrop-filter: blur(var(--fh-glass-blur));
    font-size: var(--fh-lg);
}
card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px var(--fh-glow);
}

/* =========================
   5. Inputs & Forms
   ========================= */
/* Form Container */
form-group {
    position: relative;
    margin-bottom: var(--fh-lg);
}

/* Label styling */
form-label {
    display: block;
    margin-bottom: var(--fh-xs);
    color: var(--fh-text-secondary);
    font-size: calc(var(--fh-base) * 0.875);
    font-weight: 500;
    transition: all 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

/* Floating label variant */
form-floating {
    position: relative;
}

form-floating form-label {
    position: absolute;
    top: calc(var(--fh-base) * 0.75);
    left: calc(var(--fh-base) * 0.75);
    pointer-events: none;
    transform-origin: left top;
    transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1),
                color 0.2s ease,
                opacity 0.2s ease;
    z-index: 1;
}

form-floating input:focus + form-label,
form-floating input:not(:placeholder-shown) + form-label,
form-floating textarea:focus + form-label,
form-floating textarea:not(:placeholder-shown) + form-label,
form-floating select:focus + form-label {
    transform: translateY(calc(var(--fh-base) * -1.25)) scale(0.85);
    color: var(--fh-primary);
    font-weight: 600;
    text-shadow: 0 0 5px rgba(33, 158, 255, 0.2);
}

/* Input field styling */
input,
textarea,
select {
    display: block;
    width: 100%;
    background: var(--fh-glass-bg);
    color: var(--fh-text);
    border: 1px solid var(--fh-glass-border);
    border-radius: var(--fh-radius);
    padding: calc(var(--fh-base) * 0.75) calc(var(--fh-base) * 0.75);
    font-size: var(--fh-base);
    font-family: var(--fh-font-body);
    margin-bottom: var(--fh-xs);
    transition: all 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);
    backdrop-filter: blur(var(--fh-glass-blur));
    -webkit-backdrop-filter: blur(var(--fh-glass-blur));
}

input::placeholder,
textarea::placeholder {
    color: rgba(255, 255, 255, 0.4);
    transition: opacity 0.2s ease;
}

input:focus::placeholder,
textarea:focus::placeholder {
    opacity: 0.5;
}

textarea {
    min-height: calc(var(--fh-base) * 5);
    resize: vertical;
}

select {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='20' viewBox='0 0 24 24' fill='none' stroke='%23ffffff' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right calc(var(--fh-base) * 0.5) center;
    background-size: calc(var(--fh-base) * 0.75);
    padding-right: calc(var(--fh-base) * 2);
}

/* Focus states with subtle animation */
input:focus,
textarea:focus,
select:focus {
    outline: none;
    border-color: var(--fh-primary);
    box-shadow: 0 0 0 2px rgba(33, 158, 255, 0.25), 0 4px 16px var(--fh-shadow);
    transform: translateY(-1px);
}

/* Input with icons */
input-group {
    position: relative;
    display: flex;
    align-items: stretch;
    width: 100%;
}

input-icon {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: var(--fh-text-secondary);
    transition: all 0.3s ease;
    pointer-events: none;
    z-index: 2;
}

input-icon-left {
    left: calc(var(--fh-base) * 0.75);
}

input-icon-right {
    right: calc(var(--fh-base) * 0.75);
}

input-with-icon-left {
    padding-left: calc(var(--fh-base) * 2.25);
}

input-with-icon-right {
    padding-right: calc(var(--fh-base) * 2.25);
}

input:focus ~ input-icon {
    color: var(--fh-primary);
}

/* Validation states with icons */
input.valid,
textarea.valid,
select.valid {
    border-color: #4CAF50;
    padding-right: calc(var(--fh-base) * 2.25);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%234CAF50' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='20 6 9 17 4 12'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right calc(var(--fh-base) * 0.5) center;
    background-size: calc(var(--fh-base) * 0.75);
}

input.invalid,
textarea.invalid,
select.invalid {
    border-color: #E91E63;
    padding-right: calc(var(--fh-base) * 2.25);
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%23E91E63' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Ccircle cx='12' cy='12' r='10'%3E%3C/circle%3E%3Cline x1='12' y1='8' x2='12' y2='12'%3E%3C/line%3E%3Cline x1='12' y1='16' x2='12.01' y2='16'%3E%3C/line%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right calc(var(--fh-base) * 0.5) center;
    background-size: calc(var(--fh-base) * 0.75);
}

/* Help text and validation messages */
form-help {
    font-size: calc(var(--fh-base) * 0.75);
    margin-top: var(--fh-xs);
    color: var(--fh-text-secondary);
    transition: all 0.2s ease;
}

form-help.valid {
    color: #4CAF50;
}

form-help.error {
    color: #E91E63;
}

/* Input groups for combining elements */
input-combo {
    display: flex;
}

input-combo input:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

input-combo input:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    border-right: none;
}

input-combo-text {
    display: flex;
    align-items: center;
    padding: 0 var(--fh-sm);
    background: var(--fh-glass-bg);
    color: var(--fh-text-secondary);
    border: 1px solid var(--fh-glass-border);
    font-size: var(--fh-sm);
    backdrop-filter: blur(var(--fh-glass-blur));
    -webkit-backdrop-filter: blur(var(--fh-glass-blur));
}

input-combo-text:first-child {
    border-top-left-radius: var(--fh-radius);
    border-bottom-left-radius: var(--fh-radius);
    border-right: none;
}

input-combo-text:last-child {
    border-top-right-radius: var(--fh-radius);
    border-bottom-right-radius: var(--fh-radius);
    border-left: none;
}

/* Checkbox and radio styling */
checkbox-group,
radio-group {
    margin-bottom: var(--fh-sm);
}

checkbox,
radio {
    position: relative;
    display: flex;
    align-items: center;
    margin-bottom: var(--fh-xs);
    cursor: pointer;
}

checkbox input[type="checkbox"],
radio input[type="radio"] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

checkbox-mark,
radio-mark {
    display: inline-block;
    width: calc(var(--fh-base) * 1.2);
    height: calc(var(--fh-base) * 1.2);
    margin-right: var(--fh-sm);
    background: var(--fh-glass-bg);
    border: 1px solid var(--fh-glass-border);
    position: relative;
    transition: all 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);
}

checkbox-mark {
    border-radius: calc(var(--fh-radius) * 0.5);
}

radio-mark {
    border-radius: 50%;
}

/* Checkbox checked state */
checkbox input:checked ~ checkbox-mark {
    background: var(--fh-primary);
    border-color: var(--fh-primary);
}

checkbox input:checked ~ checkbox-mark:after {
    content: '';
    position: absolute;
    left: 35%;
    top: 15%;
    width: 30%;
    height: 55%;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
    animation: checkbox-check 0.2s ease-in-out;
}

@keyframes checkbox-check {
    0% {
        opacity: 0;
        transform: scale(0.5) rotate(45deg);
    }
    50% {
        opacity: 1;
        transform: scale(1.2) rotate(45deg);
    }
    100% {
        transform: scale(1) rotate(45deg);
    }
}

/* Radio checked state */
radio input:checked ~ radio-mark {
    border-color: var(--fh-primary);
}

radio input:checked ~ radio-mark:after {
    content: '';
    position: absolute;
    top: 25%;
    left: 25%;
    width: 50%;
    height: 50%;
    border-radius: 50%;
    background: var(--fh-primary);
    animation: radio-check 0.2s ease-in-out;
}

@keyframes radio-check {
    0% {
        opacity: 0;
        transform: scale(0);
    }
    50% {
        opacity: 1;
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}

/* Focus and hover states */
checkbox input:focus ~ checkbox-mark,
radio input:focus ~ radio-mark,
checkbox:hover checkbox-mark,
radio:hover radio-mark {
    box-shadow: 0 0 0 2px rgba(33, 158, 255, 0.25);
}

/* Form controls responsiveness */
@media screen and (max-width: 768px) {
    input,
    textarea,
    select {
        padding: calc(var(--fh-base) * 0.6) calc(var(--fh-base) * 0.6);
        font-size: calc(var(--fh-base) * 0.95);
    }
    
    form-group {
        margin-bottom: calc(var(--fh-lg) * 0.85);
    }
    
    form-floating form-label {
        top: calc(var(--fh-base) * 0.65);
        left: calc(var(--fh-base) * 0.65);
    }
    
    input-combo {
        flex-wrap: wrap;
    }
    
    input-combo-text:first-child,
    input-combo input:not(:first-child) {
        border-top-left-radius: var(--fh-radius);
        border-bottom-left-radius: var(--fh-radius);
    }
    
    input-combo-text:last-child,
    input-combo input:not(:last-child) {
        border-top-right-radius: var(--fh-radius);
        border-bottom-right-radius: var(--fh-radius);
        border-right: 1px solid var(--fh-glass-border);
    }
}

/* Switch toggle */
switch {
    position: relative;
    display: inline-flex;
    align-items: center;
    margin-bottom: var(--fh-xs);
    cursor: pointer;
}

switch-input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

switch-slider {
    position: relative;
    display: inline-block;
    width: calc(var(--fh-base) * 2.5);
    height: calc(var(--fh-base) * 1.25);
    background: var(--fh-glass-bg);
    border: 1px solid var(--fh-glass-border);
    border-radius: calc(var(--fh-base) * 1.25);
    margin-right: var(--fh-sm);
    transition: all 0.3s ease;
}

switch-slider:before {
    content: '';
    position: absolute;
    height: calc(var(--fh-base) * 0.85);
    width: calc(var(--fh-base) * 0.85);
    left: calc(var(--fh-base) * 0.2);
    bottom: calc(var(--fh-base) * 0.17);
    background: var(--fh-text-secondary);
    border-radius: 50%;
    transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.4);
}

switch-input:checked + switch-slider {
    background: rgba(33, 158, 255, 0.2);
    border-color: var(--fh-primary);
}

switch-input:checked + switch-slider:before {
    transform: translateX(calc(var(--fh-base) * 1.2));
    background: var(--fh-primary);
}

switch-input:focus + switch-slider,
switch:hover switch-slider {
    box-shadow: 0 0 0 2px rgba(33, 158, 255, 0.25);
}

/* Range slider */
range-container {
    position: relative;
    margin-bottom: var(--fh-md);
}

range {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: 100%;
    height: calc(var(--fh-xs) * 1.5);
    border-radius: var(--fh-radius);
    background: var(--fh-glass-bg);
    outline: none;
    margin: var(--fh-sm) 0;
}

range::-webkit-slider-thumb {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    width: var(--fh-md);
    height: var(--fh-md);
    border-radius: 50%;
    background: var(--fh-primary);
    cursor: pointer;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    transition: all 0.2s ease;
}

range::-moz-range-thumb {
    width: var(--fh-md);
    height: var(--fh-md);
    border-radius: 50%;
    background: var(--fh-primary);
    cursor: pointer;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);
    transition: all 0.2s ease;
    border: none;
}

range::-webkit-slider-thumb:hover,
range:focus::-webkit-slider-thumb {
    transform: scale(1.2);
    box-shadow: 0 0 10px rgba(33, 158, 255, 0.4);
}

range::-moz-range-thumb:hover,
range:focus::-moz-range-thumb {
    transform: scale(1.2);
    box-shadow: 0 0 10px rgba(33, 158, 255, 0.4);
}

range-value {
    position: absolute;
    top: -25px;
    padding: 2px 6px;
    background: var(--fh-primary);
    color: white;
    border-radius: 3px;
    font-size: 12px;
    transform: translateX(-50%);
    opacity: 0;
    transition: opacity 0.3s ease;
}

range-value:after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 5px solid var(--fh-primary);
}

range:hover + range-value,
range:focus + range-value {
    opacity: 1;
}

/* =========================
   6. Buttons
   ========================= */
button {
    background: linear-gradient(90deg, var(--fh-primary), var(--fh-accent));
    color: #fff;
    border: none;
    border-radius: var(--fh-radius);
    padding: var(--fh-md) var(--fh-xl); /* Increased padding for a larger, more prominent button */
    font-size: var(--fh-md);
    font-weight: 700;
    cursor: pointer;
    box-shadow: 0 2px 12px var(--fh-glow);
    transition: background 0.3s, box-shadow 0.3s, transform 0.2s;
    outline: none;
    position: relative;
    z-index: 1;
    overflow: hidden;
    background: #219EFF;
}
button:hover {
    filter: brightness(1.1);
    transform: translateY(-2px) scale(1.03);
    box-shadow: 0 6px 24px var(--fh-glow);
}
button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: transparent;
    border: 2px solid transparent;
    border-radius: calc(var(--fh-radius) - 2px);
    transform: scale(1.1);
    opacity: 0;
    transition: transform 0.3s, opacity 0.3s;
    z-index: -1;
}
button:hover::before {
    transform: scale(1);
    opacity: 1;
    border-color: rgba(255, 255, 255, 0.5);
}

/* Enhanced CSS-only functionality */
button {
    cursor: pointer;
}

/* Make label buttons behave like regular buttons */
labelbutton {
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

/* =========================
   7. Microfeedbacks & Animations
   ========================= */
@keyframes fh-fade-in {
    from { opacity: 0; transform: translateY(-10px);}
    to { opacity: 1; transform: translateY(0);}
}
@keyframes fh-slide-up {
    from { opacity: 0; transform: translateY(20px);}
    to { opacity: 1; transform: translateY(0);}
}
@keyframes fh-rotate-holo {
    from { transform: rotate(0deg);}
    to { transform: rotate(360deg);}
}
@keyframes fh-shine {
    0% { transform: translateX(-100%);}
    20% { transform: translateX(100%);}
    100% { transform: translateX(100%);}
}

@keyframes paintbrush-sweep {
    0% { transform: rotate(-20deg); }
    50% { transform: rotate(20deg); }
    100% { transform: rotate(-20deg); }
}

@keyframes cog-rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.cog-rotate {
    display: inline-block;
    animation: cog-rotate 8s linear infinite;
    transform-origin: center;
}

/* =========================
   8. Hologram & Glow Effects
   ========================= */
holo-icon {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}
holo-icon::before {
    content: '';
    position: absolute;
    top: -30%;
    left: -30%;
    width: 160%;
    height: 160%;
    background: conic-gradient(
        from 0deg, 
        transparent 0%, 
        var(--fh-glow) 15%, 
        var(--fh-accent) 35%, 
        var(--fh-glow) 65%,
        transparent 100%
    );
    border-radius: 50%;
    z-index: -1;
    animation: fh-rotate-holo 8s linear infinite;
    filter: blur(5px);
}

/* =========================
   9. Accessibility & Responsiveness
   ========================= */
@media (max-width: 768px) {
    header h1 { font-size: calc(var(--fh-base) * var(--fh-golden) * 1.2);}
    container { padding: var(--fh-md);}
    card { padding: var(--fh-md);}
}

/* =========================
   10. Utility Classes
   ========================= */
glass {
    background: var(--fh-glass-bg);
    border: 1px solid var(--fh-glass-border);
    backdrop-filter: blur(10px);
    border-radius: var(--fh-radius);
    box-shadow: 0 4px 20px var(--fh-shadow);
}

/* =========================
   11. Feedback, Info, Loader
   ========================= */
feedback {
    background: var(--fh-glass-bg);
    border-left: 3px solid var(--fh-primary);
    border-radius: var(--fh-radius);
    padding: var(--fh-md);
    margin-top: var(--fh-base);
    font-size: var(--fh-base);
    color: var(--fh-text);
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.3s, transform 0.3s;
}
feedback.show {
    opacity: 1;
    transform: translateY(0);
}

/* Loader Overlay */
#fh-ui-loader-overlay {
  display: none;
  position: fixed;
  top: 0; left: 0; width: 100vw; height: 100vh;
  background: rgba(20,20,30,0.7);
  z-index: 2000;
  align-items: center;
  justify-content: center;
  animation: fh-fade-in 0.4s;
}

loader-checkbox {
  display: none;
}

loader-checkbox:checked + #fh-ui-loader-overlay {
  display: flex;
  animation: loader-auto-hide 2s forwards;
}

/* Toast Notification */
toast {
  position: fixed;
  bottom: calc(var(--fh-xl) * 2.5);  /* Moved higher from original position */
  left: 50%;
  transform: translateX(-50%) translateY(40px);
  background: var(--fh-glass-bg);
  color: var(--fh-text);
  border-radius: var(--fh-radius);
  box-shadow: 0 4px 24px var(--fh-shadow);
  padding: var(--fh-md) var(--fh-xl);
  font-size: var(--fh-md);
  backdrop-filter: blur(var(--fh-glass-blur));
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.4s, transform 0.4s;
  z-index: 2100;
  border-left: 4px solid var(--fh-primary);
}

toast-checkbox {
  display: none;
}

toast-checkbox:checked + toast {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
  pointer-events: auto;
  animation: toast-show-hide 3s forwards;
}

@keyframes toast-show-hide {
  0% { 
    opacity: 0;
    transform: translateX(-50%) translateY(40px); 
  }
  10% { 
    opacity: 1;
    transform: translateX(-50%) translateY(0); 
  }
  90% { 
    opacity: 1;
    transform: translateX(-50%) translateY(0); 
  }
  100% { 
    opacity: 0;
    transform: translateX(-50%) translateY(40px); 
  }
}

/* Dialog */
dialog {
  display: none;
  position: fixed;
  top: 0; left: 0; width: 100vw; height: 100vh;
  background: rgba(20,20,30,0.7);
  backdrop-filter: blur(3px);
  z-index: 2100;
  align-items: center;
  justify-content: center;
  animation: fh-fade-in 0.4s;
}

dialog-checkbox {
  display: none;
}

dialog-checkbox:checked + dialog {
  display: flex;
}

dialog-content {
  background: linear-gradient(120deg, var(--fh-glass-bg) 80%, rgba(45,192,255,0.05) 100%);
  border: 1px solid var(--fh-glass-border);
  border-left: 4px solid var(--fh-primary);
  border-radius: var(--fh-radius);
  backdrop-filter: blur(var(--fh-glass-blur));
  box-shadow: 0 8px 32px rgba(0,0,0,0.5), 0 0 15px var(--fh-glow);
  padding: var(--fh-xl);
  min-width: 320px;
  max-width: 90vw;
  text-align: center;
  animation: fh-slide-up 0.5s cubic-bezier(0.23,1,0.32,1);
  transition: transform 0.3s, box-shadow 0.3s;
}
dialog-content h3 {
  margin-bottom: var(--fh-md);
  color: var(--fh-primary);
  font-size: calc(var(--fh-lg) * 1.2);
  font-weight: 600;
}

dialog-content p {
  margin-bottom: var(--fh-md);
  font-size: var(--fh-md);
  color: var(--fh-text);
  line-height: 1.5;
}

popup-content h3 {
  margin-bottom: var(--fh-md);
  color: var(--fh-accent);
  font-size: calc(var(--fh-lg) * 1.2);
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--fh-sm);
}

popup-content p {
  margin-bottom: var(--fh-md);
  font-size: var(--fh-md);
  color: var(--fh-text);
  line-height: 1.5;
  max-width: 80ch;
  margin-left: auto;
  margin-right: auto;
}

popup-content .popup-button-container {
  margin-top: var(--fh-lg);
  display: flex;
  justify-content: center;
}

/* Dialog and popup animations */
dialog-checkbox:checked + dialog dialog-content {
  animation: fh-dialog-appear 0.5s cubic-bezier(0.23,1,0.32,1);
}

popup-checkbox:checked + popup popup-content {
  animation: fh-popup-appear 0.5s cubic-bezier(0.23,1,0.32,1);
}

/* Dialog appearance animation */
@keyframes fh-dialog-appear {
  0% { 
    opacity: 0; 
    transform: translateY(30px) scale(0.95);
  }
  100% { 
    opacity: 1; 
    transform: translateY(0) scale(1);
  }
}

/* Popup appearance animation */
@keyframes fh-popup-appear {
  0% { 
    opacity: 0;
    transform: translateY(-20px) scale(0.95);
  }
  100% { 
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* Shared hover effect for dialog and popup content */
dialog-content:hover,
popup-content:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 40px rgba(0,0,0,0.6), 0 0 20px var(--fh-glow);
}

/* Enhance dialog/popup overlay with hover effect */
close-overlay {
  transition: background-color 0.3s;
}

dialog-checkbox:checked + dialog close-overlay:hover,
popup-checkbox:checked + popup close-overlay:hover {
  background-color: rgba(0, 0, 0, 0.1);
  cursor: pointer;
}

/* =========================
   12. Navbar
   ========================= */
navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: calc(var(--fh-base) * 0.75) var(--fh-xl);
  background: var(--fh-glass-bg);
  backdrop-filter: blur(var(--fh-glass-blur));
  position: sticky;
  top: 0;
  z-index: 1000;
  box-shadow: 0 2px 16px var(--fh-shadow);
  border-bottom: 1px solid var(--fh-glass-border);
  min-height: 72px;
}
navbar .logo {
  font-size: var(--fh-xl);
  font-weight: 700;
  color: var(--fh-primary);
  text-decoration: none;
  letter-spacing: 1.5px;
  font-family: 'SF Pro Display', 'Segoe UI', Arial, sans-serif;
  text-shadow: 0 2px 12px var(--fh-glow);
  transition: color 0.2s;
}
navbar .logo:hover {
  color: var(--fh-accent);
}
navbar .nav-links {
  display: flex;
  gap: var(--fh-lg);
}
navbar .nav-link {
  position: relative;
  color: var(--fh-text);
  text-decoration: none;
  font-size: var(--fh-md);
  font-weight: 500;
  padding: var(--fh-xs) 0;
  transition: color 0.2s;
}
navbar .nav-link::after {
  content: '';
  position: absolute;
  bottom: -3px;
  left: 0;
  width: 0;
  height: 2.5px;
  background: linear-gradient(90deg, var(--fh-primary), var(--fh-accent));
  border-radius: 2px;
  transition: width 0.3s cubic-bezier(0.23,1,0.32,1);
}
navbar .nav-link:hover,
navbar .nav-link.active {
  color: var(--fh-primary);
}
navbar .nav-link:hover::after,
navbar .nav-link.active::after {
  width: 100%;
}

/* =========================
   13. Hero Section
   ========================= */
.hero-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  min-height: 80vh;
  padding: var(--fh-xxl) var(--fh-lg) var(--fh-xl) var(--fh-lg);
  background: linear-gradient(120deg, rgba(45,192,255,0.08) 0%, rgba(255,138,0,0.06) 100%);
  border-radius: 0 0 var(--fh-xl) var(--fh-xl);
  box-shadow: 0 8px 32px var(--fh-shadow);
  position: relative;
  overflow: hidden;
}

.hero-logo {
    max-width: 100%; /* Ensure logo is responsive */
    height: auto;    /* Maintain aspect ratio */
    max-height: 180px; /* Reduced max-height for a smaller logo */
    border-radius: var(--fh-radius);
}

.hero-section h1 {
    font-size: 3.5rem; /* Even larger hero title */
    font-weight: 300;
    letter-spacing: 1px;
    background: linear-gradient(90deg, var(--fh-primary), var(--fh-secondary), var(--fh-accent));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 0 15px var(--fh-glow);
    display: inline-block;
    animation: fh-fade-in 0.8s ease-out;
    margin-bottom: 2rem; /* Increased space below title */
}

.hero-section p {
    font-size: var(--fh-lg);
    /* max-width: 700px; */ /* Old max-width */
    max-width: 800px; /* Increased max-width for better flow */
    margin-left: auto; /* Center paragraph block if narrower than container */
    margin-right: auto; /* Center paragraph block */
    margin-bottom: 2.5rem; /* Increased space below paragraph */
    text-align: center; /* Ensure paragraph text is centered */
    line-height: 1.7; /* Improved readability */
}

.cta-button {
    background-color: var(--color-blue-pill); /* Blue CTA */
    color: white;
    /* padding: var(--fh-sm) var(--fh-lg); */ /* Old padding */
    padding: var(--fh-md) var(--fh-xl); /* Increased padding for a larger, more prominent button */
    border-radius: var(--fh-radius);
    text-decoration: none;
    font-weight: 500;
    transition: background-color 0.3s, transform 0.3s;
    display: inline-block; /* Needed for proper padding and potential margin usage */
    align-self: center; /* Center button within the flex container (hero's container) */
}

/* Adjustments for red-themed sections */
.section-theme-red-pill .cta-button {
    background-color: var(--color-red-pill); /* Red CTA */
}

.section-theme-red-pill .cta-button:hover {
    background-color: #C62828; /* Darker red on hover */
}

/* Ensure blockquote has good contrast and styling */
blockquote {
    border-left: 4px solid var(--fh-primary); /* Use primary color for border */
    padding-left: var(--fh-lg);
    margin: var(--fh-lg) 0;
    font-style: italic;
    color: var(--fh-text-secondary);
}

blockquote p {
    font-size: var(--fh-lg); /* Larger blockquote text */
    line-height: 1.7;
}

/* Code snippet styling */
.code-snippet {
    background-color: rgba(var(--neutral-900-rgb), 0.8); /* Dark background for code */
    color: var(--neutral-100);
    padding: var(--fh-md);
    border-radius: var(--fh-radius);
    margin-top: var(--fh-md);
    overflow-x: auto; /* Allow horizontal scrolling for long code lines */
}

.code-snippet pre {
    margin: 0;
}

.code-snippet code {
    font-family: 'SF Mono', 'Consolas', 'Menlo', monospace;
    font-size: var(--fh-sm);
}

/* Steps list styling */
.steps-list {
    list-style-type: none; /* Remove default numbering */
    padding-left: 0;
    counter-reset: step-counter; /* Initialize a counter */
}

.steps-list li {
    position: relative;
    padding-left: calc(var(--fh-lg) + var(--fh-md)); /* Space for custom number */
    margin-bottom: var(--fh-md);
    font-size: var(--fh-md);
    line-height: 1.6;
}

.steps-list li::before {
    counter-increment: step-counter; /* Increment the counter */
    content: counter(step-counter); /* Display the counter */
    position: absolute;
    left: 0;
    top: 0;
    background-color: var(--fh-primary); /* Use primary color for step numbers */
    color: white;
    width: var(--fh-lg);
    height: var(--fh-lg);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-weight: bold;
    font-size: var(--fh-sm);
}

/* Ensure all snap-section elements have consistent styling */
snap-section {
    padding: var(--fh-xl) 0; /* Add padding for better spacing */
}

snap-section h2 {
    font-family: var(--fh-font-headings);
    font-size: 2rem; /* Consistent heading size */
    font-weight: 400; /* Slightly bolder for emphasis */
    letter-spacing: 0.5px;
    margin-bottom: var(--fh-lg);
    text-align: center; /* Center section titles */
}

/* Apply section themes */
.section-theme-blue-pill {
    background-color: rgba(var(--color-blue-pill-rgb), 0.1); /* Light blue background tint */
}

.section-theme-blue-pill h2 {
    color: var(--color-blue-pill);
}

.section-theme-red-pill {
    background-color: rgba(var(--color-red-pill-rgb), 0.1); /* Light red background tint */
}

.section-theme-red-pill h2 {
    color: var(--color-red-pill);
}

/* Style info-card elements for better glassmorphism and spacing */
.features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid */
    gap: var(--fh-lg); /* Spacing between cards */
}

info-card {
    background: rgba(var(--neutral-200-rgb), 0.6); /* More translucent for glassmorphism */
    backdrop-filter: blur(var(--fh-glass-blur));
    border: 1px solid var(--fh-glass-border);
    border-radius: var(--fh-radius);
    padding: var(--fh-lg);
    box-shadow: 0 8px 32px rgba(0,0,0,0.1), 0 0 15px var(--fh-glow); /* Softer shadow */
    transition: transform 0.3s, box-shadow 0.3s;
}

info-card:hover {
    transform: translateY(-5px) scale(1.02); /* Subtle hover effect */
    box-shadow: 0 12px 40px rgba(0,0,0,0.15), 0 0 20px var(--fh-glow);
}

info-card-title {
    font-size: var(--fh-lg);
    font-weight: 500; /* Clearer title */
    margin-bottom: var(--fh-sm);
    color: var(--fh-text); /* Default text color, can be overridden by specific card themes */
}

/* Specific card title colors if needed, but section themes should dominate */
info-card[primary] info-card-title {
    color: var(--color-blue-pill); /* Example: Blue for primary cards */
}

info-card[secondary] info-card-title {
    color: var(--color-red-pill); /* Example: Red for secondary cards */
}


info-card-text {
    font-size: var(--fh-md);
    color: var(--fh-text-secondary);
    line-height: 1.6; /* Improved readability */
}

/* Ensure snap-scroll fills the viewport height */
snap-container {
    scroll-snap-type: y mandatory;
    overflow-y: scroll;
    height: 100vh;
}

snap-section {
    scroll-snap-align: start;
    min-height: 100vh; /* Make each section take full viewport height */
    display: flex; /* Enable flexbox for centering content */
    flex-direction: column; /* Stack content vertically */
    justify-content: center; /* Center content vertically */
    align-items: center; /* Center content horizontally */
    width: 100%; /* Ensure section takes full width */
}

/* Add some subtle glassmorphism to the snap-dots if they exist */
snap-dots {
    position: fixed;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    flex-direction: column;
    gap: 10px;
    z-index: 1000; /* Ensure dots are on top */
}

snap-dots a { /* Assuming snap-dots uses <a> tags for navigation */
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: rgba(var(--neutral-900-rgb), 0.3); /* Semi-transparent dots */
    border: 1px solid rgba(var(--neutral-900-rgb), 0.5);
    transition: background-color 0.3s, transform 0.3s;
}

snap-dots a.active, /* Class for the active dot */
snap-dots a:hover {
    background-color: var(--fh-primary); /* Highlight active/hovered dot */
    transform: scale(1.2);
}

/* =========================
   13. Glass Grid & Backgrounds
   ========================= */
bg {
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background: linear-gradient(135deg, #0c0d10, #161925);
    z-index: -2;
}
bg::before {
    content: '';
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0;
    background: radial-gradient(circle at 25% 25%, rgba(45,192,255,0.15), transparent 50%),
                radial-gradient(circle at 75% 75%, rgba(251,195,5,0.15), transparent 50%);
    opacity: 0.2;
    z-index: -1;
}
grid {
    position: fixed;
    top: 0; left: 0; right: 0; bottom: 0;
    background-image: 
        linear-gradient(rgba(255,255,255,0.03) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255,255,255,0.03) 1px, transparent 1px);
    background-size: 30px 30px;
    z-index: -1;
    pointer-events: none;
    transform: perspective(500px) rotateX(60deg);
    transform-origin: center top;
    opacity: 0.3;
}

/* =========================
   14. Reduced Motion
   ========================= */
@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

@media (max-width: 900px) {
  navbar { flex-direction: column; align-items: flex-start; padding: var(--fh-md) var(--fh-lg); }
  navbar .nav-links { gap: var(--fh-md); }
  .hero-section { padding: var(--fh-xl) var(--fh-md); }
  .floating-link { right: var(--fh-lg); bottom: var(--fh-lg); }
}

/* =========================
   16. Components Page Layout & Snap Scroll
   ========================= */
components-layout {
  display: flex;
  min-height: 100vh;
  padding-left: 260px; /* Match sidebar width */
  width: 100%;
  position: relative;
  overflow: hidden; /* Remove overflow to prevent extra scrollbar */
}

/* Add styles for the main element in documentation page */
components-layout main {
  flex: 1;
  overflow-y: auto; /* Enable scrolling only on the main content */
  height: calc(100vh - 72px); /* Match navbar height */
  padding: var(--fh-lg);
  scroll-behavior: smooth;
}

components-sidebar {
  position: fixed;
  top: 72px; /* Match navbar height */
  left: 0;
  width: 260px;
  height: calc(100vh - 72px);
  overflow-y: auto;
  background: var(--fh-glass-bg);
  border-right: 1px solid var(--fh-glass-border);
  padding: var(--fh-xl) var(--fh-lg);
  z-index: 10;
  box-shadow: 2px 0 16px var(--fh-shadow);
  transition: transform 0.1s ease;
}
components-sidebar ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: var(--fh-lg);
}
components-sidebar a {
  color: var(--fh-text-secondary);
  text-decoration: none;
  font-size: var(--fh-lg);
  font-weight: 500;
  padding: var(--fh-md) var(--fh-lg);
  border-radius: var(--fh-radius);
  transition: background 0.2s, color 0.2s;
  display: block;
}
components-sidebar a.active,
components-sidebar a:hover {
  color: var(--fh-primary);
  background: rgba(45,192,255,0.10);
}

component-section {
  scroll-snap-align: start;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: var(--fh-xxl) var(--fh-xl);
  animation: fh-fade-in 1s cubic-bezier(0.23,1,0.32,1);
  position: relative;
  padding-top: var(--fh-xxl);
  padding-bottom: var(--fh-xxl);
  margin-bottom: var(--fh-xl);
  animation: fh-fade-in-permanent 1s cubic-bezier(0.23,1,0.32,1);
  border-bottom: 1px solid var(--fh-glass-border);
  margin-bottom: var(--fh-xxl);
  padding-bottom: var(--fh-xxl);
}
component-section h2 {
  font-size: var(--fh-xxl);
  margin-bottom: var(--fh-md);
  background: linear-gradient(90deg, var(--fh-primary), var(--fh-accent));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  text-shadow: 0 0 15px var(--fh-glow);
  align-self: flex-start;
}
component-section .description {
  font-size: var(--fh-lg);
  color: var(--fh-text-secondary);
  margin-bottom: var(--fh-xl);
  align-self: flex-start;
  max-width: 800px;
}

/* 2-column layout for component and code */
component-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--fh-xl);
  width: 100%;
  margin-top: var(--fh-lg);
}
component-demo {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100px;
}
component-code {
  background: var(--fh-glass-bg);
  border: 1px solid var(--fh-glass-border);
  border-radius: var(--fh-radius);
  padding: var(--fh-lg);
  position: relative;
  font-family: 'JetBrains Mono', 'Fira Mono', 'Courier New', monospace;
  font-size: var(--fh-sm);
  box-shadow: 0 2px 12px var(--fh-shadow);
  max-height: 300px;
  overflow-y: auto;
  color: var(--fh-text-secondary);
}
component-code pre {
  overflow-x: auto;
  max-width: 100%;
}
component-code .copy-btn {
  position: absolute;
  top: var(--fh-sm);
  right: var(--fh-sm);
  background: var(--fh-primary);
  color: #fff;
  border: none;
  padding: var(--fh-xs) var(--fh-sm);
  border-radius: var(--fh-radius);
  font-size: var(--fh-xs);
  font-weight: 600;
  cursor: pointer;
  box-shadow: 0 2px 8px var(--fh-glow);
  transition: background 0.3s, box-shadow 0.2s;
}
component-code .copy-btn:hover {
  background: var(--fh-accent);
}

component-code .copy-btn.copied {
  background: var(--fh-accent);
  animation: copy-btn-success 2s forwards;
}

component-code .copy-btn::after {
  content: "✓ Copied";
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(33, 150, 243, 0.8);
  color: #fff;
  padding: 5px 10px;
  border-radius: var(--fh-radius);
  font-size: 12px;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s, transform 0.3s;
  backdrop-filter: blur(2px);
  box-shadow: 0 0 10px rgba(33, 150, 243, 0.4);
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
}

component-code .copy-btn.copied::after {
  opacity: 1;
  transform: translateX(-50%) translateY(-5px);
  animation: hologram-fade 1.5s forwards;
}

/* Section entry animation on scroll */
component-section {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.7s cubic-bezier(0.23,1,0.32,1), transform 0.7s cubic-bezier(0.23,1,0.32,1);
}
component-section:target {
  animation: highlight-section 1.5s ease-out;
}

@keyframes highlight-section {
  0% { background-color: rgba(195,49,125,0.1); }
  100% { background-color: transparent; }
}

@keyframes fh-fade-in-permanent {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Fix components layout for sidebar */
@media (max-width: 900px) {
  component-row { grid-template-columns: 1fr; }
  components-sidebar { 
    position: static;
    width: 100%;
    height: auto;
    border-bottom: 1px solid var(--fh-glass-border);
    border-right: none;
  }
  components-layout { padding-left: 0; }
  components-layout { flex-direction: column; }
  components-layout main {
    height: auto;
    min-height: calc(100vh - 72px - 220px); /* Navbar height + approx sidebar height on mobile */
  }
  component-section { min-height: 80vh; padding: var(--fh-xl) var(--fh-md); }
}

/* Popup improvements */
popup {
  display: none;
  position: fixed;
  top: 0; left: 0; 
  width: 100vw; 
  height: 100vh;
  background: rgba(20,20,30,0.7);
  backdrop-filter: blur(5px);
  z-index: 2100;
  align-items: center;
  justify-content: center;
  animation: fh-fade-in 0.4s;
  text-align: center;
}

popup-checkbox {
  display: none;
}

popup-checkbox:checked + popup {
  display: flex;
}

popup-content {
  background: linear-gradient(120deg, var(--fh-glass-bg) 80%, rgba(255,138,0,0.05) 100%);
  border: 1px solid var(--fh-glass-border);
  border-left: 4px solid var(--fh-accent);
  border-radius: var(--fh-radius);
  backdrop-filter: blur(var(--fh-glass-blur));
  box-shadow: 0 8px 32px rgba(0,0,0,0.5), 0 0 15px var(--fh-glow);
  padding: var(--fh-xl);
  margin: var(--fh-md);
  min-width: 320px;
  max-width: calc(90vw - var(--fh-xl) * 2);
  position: relative;
  transition: transform 0.3s, box-shadow 0.3s;
}

/* =========================
   16. Full-height Sections with Scroll Snap
   ========================= */
snap-container {
  height: 100vh;
  overflow-y: auto; /* Changed from scroll to auto */
  overflow-x: hidden; /* Prevent horizontal scrollbar */
  scroll-snap-type: y mandatory;
  scroll-behavior: smooth;
  display: flex;
  flex-direction: column;
  width: 100%; /* Ensure it takes full width */
}

snap-section {
  min-height: 100vh;
  scroll-snap-align: start;
  display: flex;
  flex-direction: column;
  justify-content: center;
  padding: var(--fh-xl) var(--fh-lg);
  position: relative;
}

snap-section + snap-section {
  border-top: 1px solid var(--fh-glass-border);
}

/* Animation for scroll-snap sections */
@media (prefers-reduced-motion: no-preference) {
  snap-section {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.7s ease-out, transform 0.8s ease-out;
  }
  
  snap-section.active-section {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Entry animations for elements within active sections */
  snap-section.active-section h1,
  snap-section.active-section h2 {
    animation: slide-in-left 0.7s ease-out forwards;
  }
  
  snap-section.active-section p,
  snap-section.active-section button {
    animation: slide-in-right 0.7s ease-out 0.2s forwards;
    opacity: 0;
  }
  
  /* Direct entry animation classes */
  .entry-top-left {
    animation: smooth-fade-in-top-left 2s cubic-bezier(0.25, 0.1, 0.25, 1) forwards;
    opacity: 0;
  }
  
  .entry-top {
    animation: smooth-fade-in-top 2s cubic-bezier(0.25, 0.1, 0.25, 1) 0.2s forwards;
    opacity: 0;
  }
  
  .entry-top-right {
    animation: smooth-fade-in-top-right 2s cubic-bezier(0.25, 0.1, 0.25, 1) 0.4s forwards;
    opacity: 0;
  }
  
  .entry-bottom-left {
    animation: smooth-fade-in-bottom-left 2s cubic-bezier(0.25, 0.1, 0.25, 1) 0.6s forwards;
    opacity: 0;
  }
  
  .entry-bottom {
    animation: smooth-fade-in-bottom 2s cubic-bezier(0.25, 0.1, 0.25, 1) 0.8s forwards;
    opacity: 0;
  }
  
  .entry-bottom-right {
    animation: smooth-fade-in-bottom-right 2s cubic-bezier(0.25, 0.1, 0.25, 1) 1s forwards;
    opacity: 0;
  }
  
  snap-section.active-section .demo-controls > * {
    animation: fade-in-up 0.6s ease-out forwards;
    opacity: 0;
  }
  
  snap-section.active-section .demo-controls > *:nth-child(2) {
    animation-delay: 0.15s;
  }
  
  snap-section.active-section .demo-controls > *:nth-child(3) {
    animation-delay: 0.3s;
  }
  
  @keyframes slide-in-left {
    from {
      opacity: 0;
      transform: translateX(-50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes slide-in-right {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes smooth-fade-in-top-left {
    0% {
      opacity: 0;
      transform: translate(-20px, -20px);
    }
    30% {
      opacity: 0.3;
    }
    70% {
      opacity: 0.8;
      transform: translate(-5px, -5px);
    }
    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
  
  @keyframes smooth-fade-in-top {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }
    30% {
      opacity: 0.3;
    }
    70% {
      opacity: 0.8;
      transform: translateY(-5px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes smooth-fade-in-top-right {
    0% {
      opacity: 0;
      transform: translate(20px, -20px);
    }
    30% {
      opacity: 0.3;
    }
    70% {
      opacity: 0.8;
      transform: translate(5px, -5px);
    }
    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
  
  @keyframes smooth-fade-in-bottom-left {
    0% {
      opacity: 0;
      transform: translate(-20px, 20px);
    }
    30% {
      opacity: 0.3;
    }
    70% {
      opacity: 0.8;
      transform: translate(-5px, 5px);
    }
    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
  
  @keyframes smooth-fade-in-bottom {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    30% {
      opacity: 0.3;
    }
    70% {
      opacity: 0.8;
      transform: translateY(5px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes smooth-fade-in-bottom-right {
    0% {
      opacity: 0;
      transform: translate(20px, 20px);
    }
    30% {
      opacity: 0.3;
    }
    70% {
      opacity: 0.8;
      transform: translate(5px, 5px);
    }
    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
}

/* =========================
   17. Copy Button Tooltip
   ========================= */
tooltip {
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  background: var(--fh-accent);
  color: #fff;
  padding: 4px 8px;
  border-radius: var(--fh-radius);
  font-size: var(--fh-xs);
  white-space: nowrap;
  pointer-events: none;
  z-index: 1000;
  box-shadow: 0 4px 12px var(--fh-shadow);
  animation: tooltip-fade 2s forwards;
}

@keyframes tooltip-fade {
  0%, 10% {
    opacity: 0;
    transform: translateX(-50%) translateY(0);
  }
  20% {
    opacity: 1;
    transform: translateX(-50%) translateY(-5px);
  }
  80% {
    opacity: 1;
    transform: translateX(-50%) translateY(-5px);
  }
  100% {
    opacity: 0;
    transform: translateX(-50%) translateY(-10px);
  }
}

/* =========================
   18. Scroll Snap Navigation
   ========================= */
snap-dots {
  position: fixed;
  right: var(--fh-lg);
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: var(--fh-md);
  z-index: 50;
}

snap-dots .dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: var(--fh-glass-border);
  transition: var(--fh-transition);
  cursor: pointer;
  position: relative;
}

snap-dots .dot:hover {
  background: var(--fh-primary);
  transform: scale(1.2);
}

snap-dots .dot.active {
  background: var(--fh-accent);
  transform: scale(1.3);
}

snap-dots .dot::after {
  content: '';
  position: absolute;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: 2px solid transparent;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  transition: var(--fh-transition);
}

snap-dots .dot.active::after {
  border-color: var(--fh-accent);
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.5);
    opacity: 0;
  }
}

/* =========================
   23. CSS-Only Functionality 
   ========================= */

/* Copy button CSS-only feedback */
.copy-btn {
  position: relative;
  overflow: hidden;
  cursor: pointer;
  user-select: none;
}

.copy-btn::before {
  content: "Copied!";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--fh-accent);
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s;
}

.copy-btn:active::before {
  opacity: 1;
  animation: copy-feedback 1.5s forwards;
}

@keyframes copy-feedback {
  0% { opacity: 1; }
  70% { opacity: 1; }
  100% { opacity: 0; }
}

/* CSS-only popup/dialog using :target pseudo-class */
popup:target,
dialog:target {
  display: flex;
  animation: fh-fade-in 0.4s;
}

popup:target popup-content,
dialog:target dialog-content {
  animation: fh-slide-up 0.5s;
}

/* Overlay close button (works with :target) */
close-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: transparent;
  z-index: -1;
}

/* CSS-only loader using :target */
#fh-ui-loader-overlay:target {
  display: flex;
  animation: fh-fade-in 0.4s, fh-fade-out 2s 1.5s forwards;
}

@keyframes fh-fade-out {
  0% { opacity: 1; }
  100% { opacity: 0; visibility: hidden; }
}

/* CSS-only toast using :target */
toast:target {
  opacity: 1;
  transform: translateX(-50%) translateY(0);
  pointer-events: auto;
  animation: show-toast 2.5s forwards;
}

@keyframes show-toast {
  0% { opacity: 0; transform: translateX(-50%) translateY(40px); }
  15% { opacity: 1; transform: translateX(-50%) translateY(0); }
  85% { opacity: 1; transform: translateX(-50%) translateY(0); }
  100% { opacity: 0; transform: translateX(-50%) translateY(40px); }
}

/* CSS-only animations for auto-hiding components */
@keyframes loader-auto-hide {
  0% { opacity: 1; }
  80% { opacity: 1; }
  100% { opacity: 0; visibility: hidden; }
}

@keyframes toast-auto-hide {
  0% { opacity: 1; transform: translateX(-50%) translateY(0); }
  80% { opacity: 1; transform: translateX(-50%) translateY(0); }
  100% { opacity: 0; transform: translateX(-50%) translateY(40px); }
}

/* Make overlays stay visible until explicitly closed */
close-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: transparent;
  z-index: -1;
}

/* CSS-only scroll spy for sidebar navigation */
components-sidebar a {
  position: relative;
  padding-left: var(--fh-lg);
  transition: color 0.3s;
}

components-sidebar a::before {
  content: "";
  position: absolute;
  left:  0;
  top: 50%;
  transform: translateY(-50%);
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: var(--fh-text-tertiary);
  transition: background 0.3s, transform 0.3s;
}

/* When a section is the target, highlight its sidebar link */
components-sidebar a.active {
  color: var(--fh-primary);
  font-weight: 600;
}

components-sidebar a.active::before {
  background: var(--fh-primary);
  transform: translateY(-50%) scale(1.5);
}

/* Reset checkboxes when navigating to a different section */
:target ~ popup-checkbox:checked,
:target ~ dialog-checkbox:checked,
:target ~ toast-checkbox:checked,
:target ~ loader-checkbox:checked {
  /* This won't actually uncheck them but at least we can hide the related elements */
  pointer-events: none;
}

:target ~ popup-checkbox:checked + popup,
:target ~ dialog-checkbox:checked + dialog,
:target ~ loader-checkbox:checked + #fh-ui-loader-overlay {
  display: none;
}

:target ~ toast-checkbox:checked + toast {
  opacity: 0;
  transform: translateX(-50%) translateY(40px);
}

/* Improve accessibility by making checkboxes focusable */
popup-checkbox:focus + label,
dialog-checkbox:focus + label,
toast-checkbox:focus + label,
loader-checkbox:focus + label {
  outline: 2px solid var(--fh-primary);
  outline-offset: 2px;
}

/* Allow keyboard users to interact with the UI */
button:focus,
.copy-btn:focus,
button:focus-visible,
a:focus-visible,
input:focus-visible,
select:focus-visible,
textarea:focus-visible {
  outline: 2px solid var(--fh-primary);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px var(--fh-glow);
}

/* CSS-only dark mode toggle */
.theme-toggle-checkbox {
  display: none;
}

.theme-toggle-label {
  position: fixed;
  top: 60px; /* Moved down to avoid overlapping with the menu */
  right: 15px;
  width: 45px;
  height: 22px;
  background: var(--fh-glass-bg);
  border-radius: 999px;
  cursor: pointer;
  z-index: 3000;
  box-shadow: 0 2px 12px var(--fh-shadow);
  border: 1px solid var(--fh-glass-border);
  transition: all 0.3s;
}

.theme-toggle-label::after {
  content: "🌙";
  position: absolute;
  left: 5px;
  top: 3px;
  font-size: 14px;
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275); /* Added bouncy effect */
}

/* Theme toggle using JavaScript instead of CSS sibling selectors */
.theme-toggle-checkbox:checked ~ .theme-toggle-label::after {
  content: "☀️";
  transform: translateX(22px);
}

/* =========================
   24. Component Improvements and Fixes
   ========================= */

/* Info Card with improved styling */
info-card {
  display: flex;
  flex-direction: column;
  border-radius: var(--fh-border-radius);
  padding: var(--fh-spacing-medium);
  backdrop-filter: blur(var(--fh-glass-blur));
  -webkit-backdrop-filter: blur(var(--fh-glass-blur));
  border: 1px solid transparent; /* For ::before gradient border */
  background-clip: padding-box; 
  position: relative;
  z-index: 1;
  /* background-color: var(--fh-surface-lowest); */ /* MODIFIED: Commented out or removed */
  background: var(--fh-glass-bg); /* ADDED: Glassmorphic background */
  box-shadow: 0 4px 20px var(--fh-glass-shadow); /* ADDED: Glassmorphic shadow */
  transition: all 0.3s ease-in-out;
  color: var(--fh-text-primary); /* ADDED/MODIFIED: Default text color for card content */
}

info-card::before {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.05), transparent);
  opacity: 0;
  transition: var(--fh-transition);
}

info-card:hover::before {
  opacity: 1;
  animation: fh-info-card-shine 2s infinite;
}

info-card:hover {
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.18), 0 0 20px var(--fh-glow);
  transform: translateY(-2px);
}

info-card h3 {
  margin-top: var(--fh-xs);
  margin-bottom: var(--fh-md);
  font-size: calc(var(--fh-base) * 1.2);
  color: var(--fh-text-emphasis); /* MODIFIED: Ensure title is emphasized */
}

info-card p:last-child {
  margin-bottom: 0;
}

/* Info card variants */
info-card.primary {
  color: var(--fh-on-primary-container) !important; 
}
info-card.primary info-card-title { /* ADDED this new rule */
  color: var(--fh-primary) !important; 
}

info-card.accent { /* This likely corresponds to secondary theme color */
  color: var(--fh-on-secondary-container) !important;
}
info-card.accent info-card-title { /* ADDED this new rule */
  color: var(--fh-secondary) !important;
}

info-card.secondary { /* This likely corresponds to tertiary theme color */
  color: var(--fh-on-tertiary-container) !important;
}
info-card.secondary info-card-title { /* ADDED this new rule */
  color: var(--fh-tertiary) !important;
}

info-card.tertiary { /* This likely corresponds to quaternary theme color */
  color: var(--fh-on-quaternary-container) !important;
}
info-card.tertiary info-card-title { /* ADDED this new rule */
  color: var(--fh-quaternary) !important;
}

info-card.quaternary { /* This likely corresponds to quinary theme color */
  color: var(--fh-on-quinary-container) !important;
}
info-card.quaternary info-card-title { /* ADDED this new rule */
  color: var(--fh-quinary) !important;
}

info-card.quinary {
  color: var(--fh-on-neutral-variant-container) !important;
}
info-card.quinary info-card-title { /* ADDED this new rule */
  color: var(--fh-neutral-variant) !important;
}

/* Alert styles with various types */
alert {
  padding: var(--fh-md) var(--fh-lg);
  margin: var(--fh-md) 0;
  border-radius: var(--fh-radius);
  position: relative;
  display: flex;
  align-items: flex-start;
  animation: fh-slide-up 0.4s;
}

alert::before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 4px;
  border-radius: var(--fh-radius) 0 0 var(--fh-radius);
}

alert-icon {
  margin-right: var(--fh-md);
  font-size: var(--fh-lg);
  display: flex;
  align-items: center;
  justify-content: center;
}

alert-content {
  flex: 1;
}

alert-title {
  font-size: var(--fh-md);
  margin: 0 0 var(--fh-xs) 0;
  font-weight: 600;
}

alert-text {
  margin: 0;
  font-size: calc(var(--fh-md) * 0.9);
}

alert-success {
  background: rgba(46, 204, 113, 0.1);
  box-shadow: 0 4px 12px rgba(46, 204, 113, 0.15);
}
alert-success::before { background: rgba(46, 204, 113, 1); }
alert-success alert-icon { color: rgba(46, 204, 113, 1); }
alert-success alert-title { color: rgba(46, 204, 113, 1); }

alert-info {
  background: rgba(33, 150, 243, 0.1);
  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.15);
}
alert-info::before { background: rgba(33, 150, 243, 1); }
alert-info alert-icon { color: rgba(33, 150, 243, 1); }
alert-info alert-title { color: rgba(33, 150, 243, 1); }

alert-warning {
  background: rgba(255, 138, 0, 0.1);
  box-shadow: 0 4px 12px rgba(255, 138, 0, 0.15);
}
alert-warning::before { background: rgba(255, 138, 0, 1); }
alert-warning alert-icon { color: rgba(255, 138, 0, 1); }
alert-warning alert-title { color: rgba(255, 138, 0, 1); }

alert-error {
  background: rgba(244, 67, 54, 0.1);
  box-shadow: 0 4px 12px rgba(244, 67, 54, 0.15);
}
alert-error::before { background: rgba(244, 67, 54, 1); }
alert-error alert-icon { color: rgba(244, 67, 54, 1); }
alert-error alert-title { color: rgba(244, 67, 54, 1); }

/* Badge Component */
badge {
  display: inline-block;
  padding: 0.25em 0.75em;
  font-size: 0.85em;
  font-weight: 500;
  line-height: 1.5;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: 30px;
  background: var(--fh-glass-bg);
  color: var(--fh-text);
  border: 1px solid var(--fh-glass-border);
  backdrop-filter: blur(var(--fh-glass-blur));
  box-shadow: 0 2px 5px var(--fh-shadow);
  transition: all 0.25s cubic-bezier(0.23,1,0.32,1);
  cursor: default;
}

badge:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px var(--fh-shadow);
}

badge.primary {
  background: var(--fh-primary);
  color: white;
  border-color: transparent;
}

badge.accent {
  background: var(--fh-accent);
  color: white;
  border-color: transparent;
}

badge.secondary {
  background: var(--fh-secondary);
  color: white;
  border-color: transparent;
}

/* Advanced Navigation styles */
navigation {
  display: flex;
  flex-direction: column;
  background: var(--fh-glass-bg);
  backdrop-filter: blur(var(--fh-glass-blur));
  border-radius: var(--fh-radius);
  overflow: hidden;
  box-shadow: 0 4px 20px var(--fh-shadow);
  width: 100%;
}

navigation-item {
  display: flex;
  align-items: center;
  padding: var(--fh-md);
  color: var(--fh-text);
  text-decoration: none;
  position: relative;
  transition: background-color 0.2s, color 0.2s;
  border-left: 3px solid transparent;
}

navigation-item:hover {
  background: rgba(33, 150, 243, 0.1);
  color: var(--fh-primary);
}

navigation-item.active {
  border-left: 3px solid var(--fh-primary);
  background: rgba(33, 150, 243, 0.1);
  color: var(--fh-primary);
}

navigation-item.active:after {
  content: '';
  position: absolute;
  bottom: 0;
  left: var(--fh-base);
  right: var(--fh-base);
  height: 2px;
  background: var(--fh-primary);
  border-radius: 2px;
}

/* Hover animation */
navigation-item:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(45deg, transparent, rgba(255,255,255,0.03), transparent);
  transform: translateX(-100%);
  transition: transform 0.6s ease;
}

navigation-item:hover:before {
  transform: translateX(100%);
}

/* Vertical navigation */
navigation.vertical {
  flex-direction: column;
  width: fit-content;
  min-width: 180px;
}

navigation.vertical navigation-item.active:after {
  top: var(--fh-base);
  bottom: var(--fh-base);
  left: 0;
  right: auto;
  width: 2px;
  height: auto;
}

/* Tab-style navigation */
navigation.tabs {
  border-bottom: 1px solid var(--fh-glass-border);
  padding-bottom: 0;
  background: transparent;
  backdrop-filter: none;
  -webkit-backdrop-filter: none;
}

navigation.tabs navigation-item {
  border-radius: var(--fh-radius) var(--fh-radius) 0 0;
  padding: var(--fh-sm) var(--fh-lg);
}

navigation.tabs navigation-item.active {
  background: var(--fh-glass-bg);
  border-top: 2px solid var(--fh-primary);
}

navigation.tabs navigation-item.active:after {
  display: none;
}

/* =========================
   Enhanced Index Page Styles
   ========================= */
.features-section {
  padding: var(--fh-xl) var(--fh-lg);
  text-align: center;
  max-width: 1200px;
  margin: 0 auto;
}

.features-section h2 {
  font-size: var(--fh-xl);
  margin-bottom: var(--fh-lg);
  background: linear-gradient(90deg, var(--fh-primary), var(--fh-accent));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  display: inline-block;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); /* Responsive grid */
  gap: var(--fh-lg); /* Spacing between cards */
}

.features-grid info-card {
  text-align: left;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: var(--fh-md);
}

.features-grid info-card i {
  color: var(--fh-primary);
  font-size: 2.5rem;
  margin-bottom: var(--fh-sm);
  opacity: 0.9;
}

.features-grid info-card.accent i {
  color: var(--fh-accent);
}

.features-grid info-card.secondary i {
  color: var(--fh-secondary);
}

.features-grid info-card.tertiary i {
  color: #4CAF50; /* Vibrant green */
}

.features-grid info-card.quaternary i {
  color: #E91E63; /* Bright pink */
}

.features-grid info-card.quinary i {
  color: #00BCD4; /* Cyan */
}

navigation.tabs {
  display: inline-flex;
  margin: var(--fh-xl) auto;
  background: var(--fh-glass-bg);
  border-radius: var(--fh-radius);
  padding: var(--fh-xs);
  position: relative;
}

tab-content {
  background: var(--fh-glass-bg);
  backdrop-filter: blur(var(--fh-glass-blur));
  -webkit-backdrop-filter: blur(var(--fh-glass-blur));
  padding: var(--fh-lg);
  border-radius: var(--fh-radius);
  margin-bottom: var(--fh-lg);
  text-align: left;
}

tab-content h3 {
  color: var(--fh-primary);
  margin-bottom: var(--fh-sm);
  font-size: var(--fh-lg);
}

.demo-area {
  margin-top: var(--fh-md);
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: var(--fh-sm);
}

.demo-section {
  padding: var(--fh-xxl) var(--fh-lg);
  text-align: center;
  background: linear-gradient(135deg, rgba(33, 158, 255, 0.05), rgba(255, 138, 0, 0.05));
  border-radius: var(--fh-radius);
  margin: var(--fh-xl) auto;
  max-width: 1200px;
}

.demo-section h2 {
  font-size: var(--fh-xxl);
  margin-bottom: var(--fh-xl);
  background: linear-gradient(90deg, var(--fh-primary), var(--fh-accent));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  display: inline-block;
}

.demo-controls {
  display: flex;
  gap: var(--fh-lg);
  justify-content: center;
  margin-bottom: var(--fh-xl);
  flex-wrap: wrap;
}

.demo-controls button {
  display: inline-flex;
  align-items: center;
  gap: var(--fh-sm);
}

.spinner-showcase {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--fh-lg);
  margin: var(--fh-xl) 0;
}

.color-theory-section {
  padding: var(--fh-xxl) var(--fh-lg);
  text-align: center;
  max-width: 900px;
  margin: 0 auto;
}

.color-theory-section h2 {
  font-size: var(--fh-xxl);
  margin-bottom: var(--fh-md);
  background: linear-gradient(90deg, var(--fh-primary), var(--fh-accent));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  display: inline-block;
}

.color-showcase {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--fh-lg);
  margin: var(--fh-xl) 0;
}

.color-box {
  padding: var(--fh-lg);
  width: 220px;
  height: 160px;
  border-radius: var(--fh-radius);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  color: white;
  font-weight: bold;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s;
}

.color-box:hover {
  transform: translateY(-5px);
}

.color-box.primary {
  background: var(--fh-primary);
}

.color-box.accent {
  background: var(--fh-accent);
}

.color-box span {
  font-size: var(--fh-lg);
}

.color-box code {
  font-family: monospace;
  font-size: var(--fh-md);
  background: rgba(255, 255, 255, 0.2);
  padding: var(--fh-xs) var(--fh-sm);
  border-radius: calc(var(--fh-radius) / 2);
}

.color-arrow {
  font-size: var(--fh-xl);
  color: var(--fh-text-secondary);
}

.color-explanation {
  margin-top: var(--fh-lg);
  font-style: italic;
  color: var(--fh-text-secondary);
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

/* Footer styles */
footer {
  background: var(--fh-glass-bg);
  backdrop-filter: blur(var(--fh-glass-blur));
  -webkit-backdrop-filter: blur(var(--fh-glass-blur));
  padding: var(--fh-xl) var(--fh-lg) var(--fh-md);
  margin-top: var(--fh-xxl);
  border-top: 1px solid var(--fh-glass-border);
  margin-top: auto; 
}

.footer-content {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--fh-xl);
  max-width: 1200px;
  margin: 0 auto var(--fh-xl);
}

.footer-logo h3 {
  font-size: var(--fh-xl);
  color: var(--fh-primary);
  margin-bottom: var(--fh-xs);
}

.footer-logo p {
  color: var(--fh-text-secondary);
}

.footer-links {
  display: flex;
  flex-direction: column;
  gap: var(--fh-sm);
}

.footer-links h4 {
  margin-bottom: var(--fh-sm);
  color: var(--fh-text);
}

.footer-links a {
  color: var(--fh-text-secondary);
  text-decoration: none;
  transition: color 0.2s;
}

.footer-links a:hover {
  color: var(--fh-primary);
}

.footer-links a i {
  margin-right: var(--fh-xs);
  width: 20px;
  text-align: center;
}

.footer-bottom {
  border-top: 1px solid var(--fh-glass-border);
  padding-top: var(--fh-md);
  text-align: center;
  color: var(--fh-text-tertiary);
  font-size: calc(var(--fh-md) * 0.9);
}

button::after {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: transparent;
  border-radius: calc(var(--fh-radius) + 2px);
  border: 2px solid transparent;
  opacity: 0;
  z-index: -1;
  transition: opacity 0.3s ease;
}

button:hover::after {
  opacity: 1;
  border-color: var(--fh-primary);
  animation: fh-border-pulse 1.5s infinite;
}

@keyframes fh-border-pulse {
  0% {
    border-color: rgba(33, 158, 255, 0.6);
    box-shadow: 0 0 0 0 rgba(33, 158, 255, 0.4);
  }
  70% {
    border-color: rgba(33, 158, 255, 0);
    box-shadow: 0 0 0 10px rgba(33, 158, 255, 0);
  }
  100% {
    border-color: rgba(33, 158, 255, 0);
    box-shadow: 0 0 0 0 rgba(33, 158, 255, 0);
  }
}

.copy-btn:active::after {
  content: '';
  position: absolute;
  top: -30%;
  left: -30%;
  width: 160%;
  height: 160%;
  background: conic-gradient(
    from 0deg,
    transparent 0%,
    rgba(33, 158, 255, 0.4) 15%,
    var(--fh-accent) 35%,
    rgba(33, 158, 255, 0.4) 65%,
    transparent 100%
  );
  border-radius: 50%;
  z-index: -1;
  animation: fh-copy-hologram 2s linear;
  opacity: 0.7;
  filter: blur(8px);
}

@keyframes fh-copy-hologram {
  0% {
    transform: scale(0.8) rotate(0deg);
    opacity: 0.7;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    transform: scale(1.2) rotate(360deg);
    opacity: 0;
  }
}

@media (max-width: 992px) {
  .features-grid {
    grid-template-columns: repeat(2, 1fr);
  }
  
  .demo-area {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .features-grid {
    grid-template-columns: 1fr;
  }
  
  .demo-area {
    grid-template-columns: 1fr;
  }
  
  .demo-controls {
    flex-direction: column;
    align-items: center;
  }
  
  .spinner-showcase {
    flex-wrap: wrap;
  }
  
  .color-showcase {
    flex-direction: column;
  }
  
  .footer-content {
    grid-template-columns: 1fr;
    text-align: center;
  }
  
  .footer-links {
    align-items: center;
  }
}

/* Perplexity Power-Up Section Two-Column Layout */
.perplexity-content-wrapper {
    display: flex;
    flex-direction: row; /* Ensures side-by-side layout */
    align-items: center; /* Vertically aligns items in the center */
    justify-content: space-between;
    gap: 2rem; /* Space between text and image */
    margin-bottom: 2rem; /* Space below this two-column block */
}

.perplexity-text-column {
    flex: 1; /* Takes up available space */
    padding-right: 1rem; /* Adds some space if columns are too close */
}

.perplexity-image-column {
    flex: 1; /* Takes up available space */
    display: flex;
    justify-content: center;
    align-items: center;
    padding-left: 1rem; /* Adds some space if columns are too close */
    border-radius: 5%;
}

.perplexity-image {
    max-width: 100%;
    height: auto;
    border-radius: 8px; 
    box-shadow: 0 4px 15px rgba(0,0,0,0.1); 
}

/* Specific styling for Perplexity Power-Up section to override theme */
#perplexity-power-up {
    background-color: #FFFFFF; /* Assuming white background to match image */
    color: #333333; /* Dark text color for readability on white background */
}

#perplexity-power-up h2,
#perplexity-power-up h3,
#perplexity-power-up p,
#perplexity-power-up blockquote p {
    color: #333333; /* Ensure all text elements in this section are dark */
}

#perplexity-power-up .info-card {
    background: rgba(0, 0, 0, 0.05); /* Adjust card background for light section bg */
    border: 1px solid rgba(0, 0, 0, 0.1);
}